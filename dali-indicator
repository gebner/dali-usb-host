#!/usr/bin/env python
import appindicator, gtk, sys
from daliusb import *

class DaliIndicator(appindicator.Indicator):
  def __init__(self):
    appindicator.Indicator.__init__(self, 'dali-indicator', 'dali-usb',
      appindicator.CATEGORY_HARDWARE)
    self.set_status(appindicator.STATUS_ACTIVE)

    menu = gtk.Menu()
    self.info = gtk.MenuItem()
    self.info.set_sensitive(False)
    self.info.show()
    menu.append(self.info)
    self.set_menu(menu)

    self.adj = gtk.Adjustment(150, 85, 254, 5, 10)
    self.adj.connect('value-changed', self.adj_value_changed)

    cur_value = 150
    res = find_and_send_cmd(255, 160)
    if res is not None:
      cur_value = float(res[1])
    self.adj.set_value(cur_value)
    self.adj_value_changed(self.adj)

    self.connect('scroll-event', self.scrolled)

  def adj_value_changed(self, adj):
    try:
      val = int(self.adj.get_value())
      if val == 85: val = 0
      find_and_send_cmd(254, val)
    except:
      print sys.exc_info()
    self.info.set_label('Current dim level: %i (%.02f%%)' % (self.adj.get_value(), (self.adj.get_value()-1)/253.0*100.0))
    print self.info.get_label()

  def scrolled(self, ind, delta, direction):
    if direction == 1: # down
      self.adj.set_value(self.adj.get_value() - self.adj.get_step_increment())
    elif direction == 0: # up
      self.adj.set_value(self.adj.get_value() + self.adj.get_step_increment())

if __name__ == '__main__':
  ind = DaliIndicator()
  gtk.main()
